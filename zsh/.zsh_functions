# Function to check all aur packages for updates. Relies on git.
funcname aur_updates() {
    aurpath=$HOME/aur
    for folder in $aurpath/*
    do 
        git_status=$(git --work-tree="$folder" --git-dir="$folder/.git" status)
        branch_status=$(echo $git_status | grep 'Your branch')
        if [[ $branch_status != *"up to date"* ]]; then
            echo "=== $folder can updated, details below: ==="
            echo "$git_status"
        fi
    done
}

# Function to change wallpaper. Previous wallapaper gets backuped into
# ~/media/wallpaper_archive, which is created if there is no archive
funcname change_wallpaper() {
    h=1440
    w=2560
    mkdir -p ~/media/bg_archive
    bg=~/media/background.jpg
    mv $bg ~/media/bg_archive/bg_$(date +%Y_%m_%d).jpg
    curl -L https://source.unsplash.com/random/"$w"x"$h" -o $bg
    echo "Reload your sway config to set new wallpaper"
}

# Function to write daily diary. Follows file naming conventions by 
# https://f-droid.org/en/packages/org.billthefarmer.diary/ so syncing between
# arch and android is convinient
funcname diary() {
    if [[ ! -d ~/documents/life/diary/$(date +"%Y/%m") ]]; then
        mkdir -p ~/documents/life/diary/$(date +"%Y/%m")
    fi

    v ~/documents/life/diary/$(date +"%Y/%m/%d").txt    
}

# Create folder and cd to it
funcname mcd() {
    mkdir "$1" && cd "$1"
}

# Mounts encrypted backup disk given as argument to /media/backup -folder, which is
# created and given write permissions if not already available
funcname backup_mounter() {
    guide="Give m/u as parameter to mount or unmount. If mounting, also give disk as parameter"
    if [[ $# -eq 0 ]]; then
        echo $guide
        return 1
    fi
    name=backup
    dest=/media/$name
    if [[ $1 == 'm' && $2 != '' ]]; then
        sudo cryptsetup open $2 $name
        [[ -e $dest ]] || sudo mkdir -p $dest
        sudo mount /dev/mapper/$name $dest
        [[ -w $dest ]] || sudo chmod 777 $dest
    elif [[ $1 == 'u' ]]; then
        sudo umount $dest
        sudo cryptsetup close $name
    else
        echo $guide
        return 1
    fi
}

# Wrapper for ranger, automatically changes to last visited directory when
# quitting
funcname ranger() {
    tempfile="$(mktemp -t tmp.XXXXXX)"
    /usr/bin/ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

# Every once in a while spotifyd becomes unavailable. This allows to restart it
# and launch spt in one command.
funcname spt_restart() {
    pkill spotifyd; spotifyd && spt
}

# Launch todo file with vim
funcname todo() {
    v ~/documents/todo/todo.txt
}
