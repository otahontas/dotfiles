#!/usr/bin/env bash
set -e

if [ -z "$1" ]; then
  echo "Usage: git-worktree-new BRANCH_NAME"
  echo ""
  echo "Creates a new git worktree with automatic git-crypt support."
  echo ""
  echo "Directory selection priority:"
  echo "  1. .worktrees/ (if exists in repo)"
  echo "  2. worktrees/ (if exists in repo)"
  echo "  3. ~/.config/superpowers/worktrees/<project>/ (fallback)"
  exit 1
fi

BRANCH_NAME="$1"
REPO_ROOT="$(git rev-parse --show-toplevel 2>/dev/null || { echo "Error: Not in a git repository"; exit 1; })"
PROJECT_NAME="$(basename "$REPO_ROOT")"

# Detect git-crypt
HAS_GIT_CRYPT=false
if [ -d "$REPO_ROOT/.git/git-crypt" ]; then
  HAS_GIT_CRYPT=true
  echo "Detected git-crypt encryption"
fi

# Determine worktree location following skill priority
if [ -d "$REPO_ROOT/.worktrees" ]; then
  WORKTREE_DIR=".worktrees"
  WORKTREE_PATH="$REPO_ROOT/.worktrees/$BRANCH_NAME"
elif [ -d "$REPO_ROOT/worktrees" ]; then
  WORKTREE_DIR="worktrees"
  WORKTREE_PATH="$REPO_ROOT/worktrees/$BRANCH_NAME"
else
  # Use global location
  WORKTREE_DIR="~/.config/superpowers/worktrees/$PROJECT_NAME"
  WORKTREE_PATH="$HOME/.config/superpowers/worktrees/$PROJECT_NAME/$BRANCH_NAME"
  mkdir -p "$HOME/.config/superpowers/worktrees/$PROJECT_NAME"
fi

echo "Creating worktree for branch: $BRANCH_NAME"
echo "Location: $WORKTREE_PATH"

# Create worktree (with git-crypt bypass if needed)
if [ "$HAS_GIT_CRYPT" = true ]; then
  git -c filter.git-crypt.smudge=cat -c filter.git-crypt.clean=cat worktree add "$WORKTREE_PATH" -b "$BRANCH_NAME"

  # Symlink git-crypt directory
  ln -s "$REPO_ROOT/.git/git-crypt" "$REPO_ROOT/.git/worktrees/$BRANCH_NAME/git-crypt"

  # Navigate and checkout files (decrypts them)
  cd "$WORKTREE_PATH"
  git checkout -- . 2>/dev/null || true
else
  git worktree add "$WORKTREE_PATH" -b "$BRANCH_NAME"
  cd "$WORKTREE_PATH"
fi

# Verify status
STATUS=$(git status --short)
if [ -n "$STATUS" ]; then
  echo "Warning: Worktree has uncommitted changes:"
  echo "$STATUS"
fi

echo ""
echo "✓ Worktree created successfully"
if [ "$HAS_GIT_CRYPT" = true ]; then
  echo "✓ Files decrypted"
fi
echo ""
echo "Next steps:"
echo "  cd $WORKTREE_PATH"
if [ -f "$WORKTREE_PATH/package.json" ]; then
  echo "  npm ci"
elif [ -f "$WORKTREE_PATH/Cargo.toml" ]; then
  echo "  cargo build"
fi
