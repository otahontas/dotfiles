# Function to check all aur packages for updates. Relies on git.
funcname aur_updates() {
    aurpath=$HOME/.aur
    for folder in $aurpath/*
    do
        dir="--work-tree=$folder --git-dir=$folder/.git"
        eval "git $dir fetch" > /dev/null 2>&1
        git_status=$(eval "git $dir status")
        branch_status=$(echo $git_status | grep 'Your branch')
        if [[ $branch_status != *"up to date"* ]]; then
            echo "=== $folder can updated ==="
            echo "=> Reseting head, deleting old files and pulling new files"
            eval "git $dir reset --hard HEAD"
            eval "git $dir clean -xfd"
            eval "git $dir pull"
        fi
    done
    echo "==="
    echo "Remember to check out git-based builds and manually build them if needed!"
}

# Function to change wallpaper. Previous wallapaper gets backuped into
# ~/media/wallpaper_archive, which is created if there is no archive
funcname change_wallpaper() {
    h=1440
    w=2560
    mkdir -p ~/media/bg_archive
    bg=~/media/background.jpg
    dest=~/media/bg_archive/bg_$(date +%Y_%m_%d).jpg
    [[ -e $dest ]] || mv $bg ~/media/bg_archive/bg_$(date +%Y_%m_%d).jpg
    curl -L https://source.unsplash.com/random/"$w"x"$h" -o $bg
    echo "Reload your sway config to set new wallpaper"
}

# Function to write daily diary. Follows file naming conventions by 
# https://f-droid.org/en/packages/org.billthefarmer.diary/ so syncing between
# arch and android is convinient
funcname diary() {
    if [[ ! -d ~/documents/life/diary/$(date +"%Y/%m") ]]; then
        mkdir -p ~/documents/life/diary/$(date +"%Y/%m")
    fi

    $EDITOR ~/documents/life/diary/$(date +"%Y/%m/%d").txt    
}

# Create folder and cd to it
funcname mcd() {
    mkdir "$1" && cd "$1"
}

# Wrapper for ranger, automatically changes to last visited directory when
# quitting
funcname ranger() {
    tempfile="$(mktemp -t tmp.XXXXXX)"
    command ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}
