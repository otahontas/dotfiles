# Function to check all aur packages for updates. Relies on git.
function aur_updates() {
    aurpath=$HOME/.aur
    for folder in $aurpath/*
    do
        dir="--work-tree=$folder --git-dir=$folder/.git"
        eval "git $dir fetch" > /dev/null 2>&1
        git_status=$(eval "git $dir status")
        branch_status=$(echo $git_status | grep 'Your branch')
        if [[ $branch_status != *"up to date"* ]]; then
            echo "=== $folder can updated ==="
            echo "=> Reseting head, deleting old files and pulling new files"
            eval "git $dir reset --hard HEAD"
            eval "git $dir clean -xfd"
            eval "git $dir pull"
        fi
    done
    echo "==="
    echo "Remember to check out git-based builds and manually build them if needed!"
}

# Function to cleanup all extra downloads in aur dir. Relies on git.
function aur_cleanup() {
    aurpath=$HOME/.aur
    for folder in $aurpath/*
    do
        dir="--work-tree=$folder --git-dir=$folder/.git"
        eval "git $dir reset --hard HEAD"
        eval "git $dir clean -xfd"
    done
    echo "done"
}

# Function to change wallpaper. Previous wallapaper gets backuped into
# ~/media/wallpaper_archive, which is created if there is no archive
function change_wallpaper() {
    h=1440
    w=2560
    mkdir -p ~/media/bg_archive
    bg=~/media/background.jpg
    dest=~/media/bg_archive/bg_$(date +%Y_%m_%d).jpg
    [[ -e $dest ]] || mv $bg ~/media/bg_archive/bg_$(date +%Y_%m_%d).jpg
    curl -L https://source.unsplash.com/random/"$w"x"$h" -o $bg
    echo "Reload your sway config to set new wallpaper"
}

# Function to write daily diary. Follows file naming conventions by 
# https://f-droid.org/en/packages/org.billthefarmer.diary/ so syncing between
# arch and android is convinient
function diary() {
    if [[ ! -d ~/documents/life/diary/$(date +"%Y/%m") ]]; then
        mkdir -p ~/documents/life/diary/$(date +"%Y/%m")
    fi

    $EDITOR ~/documents/life/diary/$(date +"%Y/%m/%d").txt    
}

# Create folder and cd to it
function mcd() {
    mkdir $1 && cd $1
}

# Cd to folder and list content
function cl() {
    cd $1 && ls .
}

# Open files with xdg-open
function o() {
    xdg-open $1 & disown
}

# Wrapper function for nnn file explorer
function nnn() {
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Show hidden files, open textfiles with $VISUAL
    command nnn -eH "$@"

    if [ -f "$NNN_TMPFILE" ]; then
        . "$NNN_TMPFILE"
        # pass aliased rm
        \rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

# Wrapper function for tmux for showing correct colors
function tmux() {
    command env TERM="xterm-256color" tmux "$@"
}

# Cleanup cache
function cache_cleanup() {
    read \?"This will cleanup cache from last 6 months. Are you sure (y/n)? "
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        find ~/.cache/ -depth -type f -atime +182 -delete
    fi
}
